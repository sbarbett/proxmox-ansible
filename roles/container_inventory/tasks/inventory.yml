---
- name: Retrieve container IP via DHCP using proxmoxer
  ansible.builtin.command: >
    {{ role_path }}/files/get_container_ip.py
    --host "{{ proxmox_api_host }}"
    --user "{{ proxmox_api_user }}"
    --token_name "{{ proxmox_api_id | default('') }}"
    --token_value "{{ proxmox_api_secret | default('') }}"
    --password "{{ proxmox_api_password | default('') }}"
    --node "{{ proxmox_node }}"
    --vmid "{{ container.vmid }}"
    --retries 10
    --delay 3
  register: ip_result
  changed_when: false

- name: Set container IP fact
  ansible.builtin.set_fact:
    container_ip: "{{ ip_result.stdout }}"

- name: Debug - Show container IP
  ansible.builtin.debug:
    msg: "Container IP is: {{ container_ip }}"

- name: Add container to dynamic inventory (as root)
  ansible.builtin.add_host:
    name: "lxc_{{ container.vmid }}"
    groups: proxmox_containers
    ansible_host: "{{ container_ip }}"
    ansible_connection: ssh
    ansible_user: root
    ansible_ssh_private_key_file: "{{ container.config.private_key }}"
    ansible_python_interpreter: /usr/bin/python3
    container: "{{ container }}"
  when: container.config.initial_setup | default(false)

- name: Add container to dynamic inventory (non-root for extras)
  ansible.builtin.add_host:
    name: "lxc_{{ container.vmid }}_user"
    groups: proxmox_containers_extras
    ansible_host: "{{ container_ip }}"
    ansible_connection: ssh
    ansible_user: "{{ container.config.username }}"
    ansible_ssh_private_key_file: "{{ container.config.private_key }}"
    ansible_python_interpreter: /usr/bin/python3
    container: "{{ container }}"
    ansible_become: true
    ansible_become_method: sudo
  when: container.config.install_extras | default(false) and container.config.initial_setup | default(false)

- name: Add container to dynamic inventory for docker setup
  ansible.builtin.add_host:
    name: "lxc_{{ container.vmid }}_user"
    groups: proxmox_containers_docker
    ansible_host: "{{ container_ip }}"
    ansible_connection: ssh
    ansible_user: "{{ container.config.username }}"
    ansible_ssh_private_key_file: "{{ container.config.private_key }}"
    ansible_python_interpreter: /usr/bin/python3
    path_to_compose_files: "{{ role_path }}/files/compose_files"
    container: "{{ container }}"
    ansible_become: true
    ansible_become_method: sudo
  when: container.config.install_docker | default(false) and container.config.initial_setup | default(false)
